{"version":3,"file":"disposableStack.js","sourceRoot":"","sources":["../../src/disposableStack.ts","../../../../internal/guards/dist/cjs/index.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;EAcE;;;;AAGF,mDAA6C;AAC7C,kDAAwK;AAExK,MAAM,mBAAmB,GAAG,IAAI,OAAO,EAAsC,CAAC;AAC9E,MAAM,2BAA2B,GAAG,IAAI,OAAO,EAAkD,CAAC;AAClG,MAAM,gBAAgB,GAAG,IAAI,OAAO,EAA6C,CAAC;AAIlF;;GAEG;AACH,MAAa,eAAe;IAOxB;;OAEG;IACH;QACI,4BAA4B;QAE5B,gEAAgE;QAChE,mLAAmL;QAEnL,6DAA6D;QAC7D,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAEzC,4EAA4E;QAC5E,2BAA2B,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAE1C,4DAA4D;QAC5D,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAEtC,+BAA+B;IACnC,CAAC;IAED,MAAM,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;QACvB,0CAA0C;QAE1C,8BAA8B;QAC9B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;;;;;;;OAYG;IACH,IAAI,OAAO;QACP,gDAAgD;QAEhD,gDAAgD;QAEhD,4EAA4E;QAC5E,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;QAExE,gEAAgE;QAChE,IAAI,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;YAC1C,+DAA+D;YAC/D,MAAM,OAAO,GAAG,IAAA,oBAAS,EAAC,IAAI,EAAE,0BAAU,CAAC,OAAO,CAAC,CAAC;YAEpD,iEAAiE;YACjE,IAAI,OAAO,KAAK,SAAS;gBAAE,MAAM,IAAI,SAAS,CAAC,qBAAqB,0BAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAErG,uEAAuE;YACvE,uDAAuD;YACvD,6CAA6C;YAC7C,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE7B,oDAAoD;YACpD,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACjC;QAED,gDAAgD;QAChD,OAAO,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;IACvC,CAAC;IAeD,GAAG,CAAI,KAAQ,EAAE,YAA8C,SAAS;QACpE,sEAAsE;QAEtE,gDAAgD;QAEhD,4EAA4E;QAC5E,MAAM,eAAe,GAAG,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,eAAe;YAAE,MAAM,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;QAE1D,iGAAiG;QACjG,IAAI,eAAe,KAAK,UAAU;YAAE,MAAM,IAAI,cAAc,CAAC,oBAAoB,CAAC,CAAC;QAEnF,6CAA6C;QAC7C,IAAI,SAAS,KAAK,SAAS,EAAE;YACzB,2EAA2E;YAC3E,IAAI,EClHL,gBAAY,KAAK,UDSpB,CAyG8B;gBAAE,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAC;YAEhF,wEAAwE;YACxE,sCAAsC;YACtC,mDAAmD;YACnD,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAEjC,mFAAmF;YACnF,IAAA,gCAAqB,EAAC,2BAA2B,CAAC,GAAG,CAAC,IAAI,CAAE,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;SACvF;QAED,8DAA8D;aACzD,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YAC5C,oEAAoE;YACpE,IAAI,ECtHL,YAAY,KAAK,QDU5B,IAMQ,UChB0C,IDUhC,ICTP,YAAY,KAAK,UDWX,CA0Ge;gBAAE,MAAM,IAAI,SAAS,CAAC,wBAAwB,CAAC,CAAC;YAEpE,wDAAwD;YACxD,MAAM,MAAM,GAAG,IAAA,2BAAgB,EAAC,KAAmB,EAAE,MAAM,CAAC,CAAC;YAE7D,oCAAoC;YACpC,IAAI,MAAM,KAAK,SAAS,EAAE;gBACtB,0CAA0C;gBAC1C,ICxIL,YAAY,KAAK,UDSpB,EA+H+B;oBACnB,uFAAuF;oBACvF,IAAA,gCAAqB,EAAC,2BAA2B,CAAC,GAAG,CAAC,IAAI,CAAE,EAAE,SAAS,EAAE,MAAM,EAAE,KAAkC,CAAC,CAAC;iBACxH;gBAED,YAAY;qBACP;oBACD,kCAAkC;oBAClC,MAAM,IAAI,SAAS,CAAC,0BAA0B,CAAC,CAAC;iBACnD;aACJ;YAED,WAAW;iBACN;gBACD,oFAAoF;gBACpF,IAAA,gCAAqB,EAAC,2BAA2B,CAAC,GAAG,CAAC,IAAI,CAAE,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;aACxF;SACJ;QAED,qBAAqB;QACrB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,IAAI;QACA,2CAA2C;QAE3C,gDAAgD;QAEhD,4EAA4E;QAC5E,MAAM,eAAe,GAAG,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,eAAe;YAAE,MAAM,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;QAE1D,iGAAiG;QACjG,IAAI,eAAe,KAAK,UAAU;YAAE,MAAM,IAAI,cAAc,CAAC,oBAAoB,CAAC,CAAC;QAEnF,4EAA4E;QAC5E,2CAA2C;QAC3C,MAAM,CAAC,GAAG,IAAA,6BAAkB,EAAC,IAAI,EAAE,eAAe,CAAC,CAAC;QAEpD,wDAAwD;QACxD,MAAM,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC;QAEnC,+EAA+E;QAC/E,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,kBAAkB,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;QAEtF,kGAAkG;QAClG,IAAI,mBAAmB,CAAC,GAAG,CAAC,kBAAkB,CAAC,KAAK,SAAS;YAAE,MAAM,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAC;QAEjI,+HAA+H;QAC/H,6EAA6E;QAC7E,MAAM,uBAAuB,GAAG,2BAA2B,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;QACvE,MAAM,0BAA0B,GAAG,2BAA2B,CAAC,GAAG,CAAC,kBAAkB,CAAE,CAAC;QACxF,0BAA0B,CAAC,IAAI,CAAC,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAC,EAAE,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC;QAEtG,mCAAmC;QACnC,OAAO,kBAAkB,CAAC;IAC9B,CAAC;IAED;;OAEG;IACH,CAAC,0BAAU,CAAC,OAAO,CAAC;QAChB,qDAAqD;QAErD,gDAAgD;QAEhD,4EAA4E;QAC5E,MAAM,eAAe,GAAG,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,eAAe;YAAE,MAAM,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;QAE1D,iFAAiF;QACjF,IAAI,eAAe,KAAK,UAAU;YAAE,OAAO;QAE3C,8DAA8D;QAC9D,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAE1C,gFAAgF;QAChF,MAAM,uBAAuB,GAAG,2BAA2B,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;QACvE,IAAA,2BAAgB,EAAC,MAAM,EAAE,uBAAuB,CAAC,MAAM,CAAC,CAAC,EAAE,uBAAuB,CAAC,MAAM,CAAC,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC;IAC1H,CAAC;CACJ;AAlND,0CAkNC;;AA/MG;IACI,MAAM,CAAC,cAAc,CAAC,EAAI,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAAC,CAAC;AAChH,CAAC,GAAA,CAAA","sourcesContent":["/*!\r\n   Copyright 2019 Ron Buckton\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\r\nimport /*#__INLINE__*/ { isFunction, isObject } from \"@esfx/internal-guards\";\r\nimport { Disposable } from \"./disposable.js\";\r\nimport { AddDisposableResource, DisposableResourceRecord, DisposeMethod, DisposeResources, GetDisposeMethod, GetMethod, SpeciesConstructor } from \"./internal/utils.js\";\r\n\r\nconst weakDisposableState = new WeakMap<Disposable, \"pending\" | \"disposed\">();\r\nconst weakDisposableResourceStack = new WeakMap<Disposable, DisposableResourceRecord<\"sync\">[]>();\r\nconst weakBoundDispose = new WeakMap<DisposableStack, (() => void) | undefined>();\r\n\r\nexport type DisposableLike = Disposable | (() => void);\r\n\r\n/**\r\n * Emulates Python's `ExitStack`\r\n */\r\nexport class DisposableStack {\r\n    declare [Symbol.toStringTag]: string;\r\n\r\n    static {\r\n        Object.defineProperty(this.prototype, Symbol.toStringTag, { configurable: true, value: \"DisposableStack\" });\r\n    }\r\n\r\n    /**\r\n     * Creates a new DisposableStack.\r\n     */\r\n    constructor() {\r\n        // 9.3.1.1 DisposableStack()\r\n\r\n        // 1. If NewTarget is `undefined` throw a *TypeError* exception.\r\n        // 2. Let _disposableStack_ be ? OrdinaryCreateFromConstructor(NewTarget, *\"%DisposableStack.prototype%\"*, « [[DisposableState]], [[DisposableResourceStack]], [[BoundDispose]] »).\r\n\r\n        // 3. Set _disposableStack_.[[DisposableState]] to ~pending~.\r\n        weakDisposableState.set(this, \"pending\");\r\n\r\n        // 4. Set _disposableStack_.[[DisposableResourceStack]] to a new empty List.\r\n        weakDisposableResourceStack.set(this, []);\r\n\r\n        // 5. Set _disposableStack_.[[BoundDispose]] to *undefined*.\r\n        weakBoundDispose.set(this, undefined);\r\n\r\n        // 6. Return _disposableStack_.\r\n    }\r\n\r\n    static get [Symbol.species]() {\r\n        // 9.3.2.1 get DisposableStack[@@species]]\r\n\r\n        // 1. Return the *this* value.\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Dispose this object's resources.\r\n     *\r\n     * NOTE: `dispose` returns a bound method, so it can be extracted from `DisposableStack` and called independently:\r\n     *\r\n     * ```ts\r\n     * const stack = new DisposableStack();\r\n     * for (const f of files) stack.use(openFile(f));\r\n     * const closeFiles = stack.dispose;\r\n     * ...\r\n     * closeFiles();\r\n     * ```\r\n     */\r\n    get dispose() {\r\n        // 9.3.3.1 get DisposableStack.prototype.dispose\r\n\r\n        // 1. Let _disposableStack_ be the *this* value.\r\n\r\n        // 2. Perform ? RequireInternalSlot(_disposableStack_, [[DisposableState]]).\r\n        if (!weakDisposableState.has(this)) throw new TypeError(\"Wrong target\");\r\n\r\n        // 3. If _disposableStack_.[[BoundDispose]] is *undefined*, then\r\n        if (weakBoundDispose.get(this) === undefined) {\r\n            // a. Let _dispose_ be GetMethod(_disposableStack_, @@dispose).\r\n            const dispose = GetMethod(this, Disposable.dispose);\r\n\r\n            // b. If _dispose_ is *undefined*, throw a *TypeError* exception.\r\n            if (dispose === undefined) throw new TypeError(`Method not found: ${Disposable.dispose.toString()}`);\r\n\r\n            // c. Let _F_ be a new built-in function object as defined in 9.3.3.1.1\r\n            // d. Set _F_.[[DisposableStack]] to _disposableStack_.\r\n            // e. Set _F_.[[DisposeMethod]] to _dispose_.\r\n            const F = dispose.bind(this);\r\n\r\n            // f. Set _disposableStack_.[[BoundDispose]] to _F_.\r\n            weakBoundDispose.set(this, F);\r\n        }\r\n\r\n        // 4. Return _disposableStack_.[[BoundDispose]].\r\n        return weakBoundDispose.get(this)!;\r\n    }\r\n\r\n    /**\r\n     * Pushes a new disposable resource onto the disposable stack stack. Resources are disposed in the reverse order they were entered.\r\n     * @param value The resource to add.\r\n     * @returns The resource provided.\r\n     */\r\n    use<T extends DisposableLike | null | undefined>(value: T): T;\r\n    /**\r\n     * Pushes a new disposable resource onto the disposable stack stack. Resources are disposed in the reverse order they were entered.\r\n     * @param value The resource to add.\r\n     * @param onDispose The operation to perform when the resource is disposed.\r\n     * @returns The resource provided.\r\n     */\r\n    use<T>(value: T, onDispose: (value: T) => void): T;\r\n    use<T>(value: T, onDispose: ((value: T) => void) | undefined = undefined): T {\r\n        // 9.3.3.2 DisposableStack.prototype.use ( _value_ [ , _onDispose_ ] )\r\n\r\n        // 1. Let _disposableStack_ be the *this* value.\r\n\r\n        // 2. Perform ? RequireInternalSlot(_disposableStack_, [[DisposableState]]).\r\n        const disposableState = weakDisposableState.get(this);\r\n        if (!disposableState) throw new TypeError(\"Wrong target\");\r\n\r\n        // 3. If _disposableStack_.[[DisposableState]] is ~disposed~, throw a *ReferenceError* exception.\r\n        if (disposableState === \"disposed\") throw new ReferenceError(\"Object is disposed\");\r\n\r\n        // 4. If _onDispose_ is not *undefined*, then\r\n        if (onDispose !== undefined) {\r\n            // a. If IsCallable(_onDispose_) is *false*, throw a *TypeError* exception.\r\n            if (!isFunction(onDispose)) throw new TypeError(\"Function expected: onDispose\");\r\n\r\n            // b. Let _F_ be a new built-in function object as defined in 9.3.3.2.1.\r\n            // c. Set _F_.[[Argument]] to _value_.\r\n            // d. Set _F_.[[OnDisposeCallback]] to _onDispose_.\r\n            const F = () => onDispose(value);\r\n\r\n            // e. Perform ? AddDisposableResource(_disposableStack_, *undefined*, ~sync~, _F_).\r\n            AddDisposableResource(weakDisposableResourceStack.get(this)!, undefined, \"sync\", F);\r\n        }\r\n\r\n        // 5. Else, if _value_ is neither *null* nor *undefined*, then\r\n        else if (value !== null && value !== undefined) {\r\n            // a. If Type(_value_) is not Object, throw a *TypeError* exception.\r\n            if (!isObject(value)) throw new TypeError(\"Object expected: value\");\r\n\r\n            // b. Let _method_ be GetDisposeMethod(_value_, ~sync~).\r\n            const method = GetDisposeMethod(value as T & object, \"sync\");\r\n\r\n            // c. If _method_ is undefined, then\r\n            if (method === undefined) {\r\n                // i. If IsCallable(_value_) is true, then\r\n                if (isFunction(value)) {\r\n                    // 1. Perform ? AddDisposableResource(_disposableStack_, *undefined*, ~sync~, _value_).\r\n                    AddDisposableResource(weakDisposableResourceStack.get(this)!, undefined, \"sync\", value as T & DisposeMethod<\"sync\">);\r\n                }\r\n\r\n                // ii. Else,\r\n                else {\r\n                    // 1. Throw a TypeError exception.\r\n                    throw new TypeError(\"Function expected: value\");\r\n                }\r\n            }\r\n\r\n            // d. Else,\r\n            else {\r\n                // i. Perform ? AddDisposableResource(_disposableStack_, _value_, ~sync~, _method_).\r\n                AddDisposableResource(weakDisposableResourceStack.get(this)!, value, \"sync\", method);\r\n            }\r\n        }\r\n\r\n        // 6. Return _value_.\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Moves all resources out of this `DisposableStack` and into a new `DisposableStack` and returns it.\r\n     */\r\n    move(): DisposableStack {\r\n        // 9.3.3.3 DisposableStack.prototype.move()\r\n\r\n        // 1. Let _disposableStack_ be the *this* value.\r\n\r\n        // 2. Perform ? RequireInternalSlot(_disposableStack_, [[DisposableState]]).\r\n        const disposableState = weakDisposableState.get(this);\r\n        if (!disposableState) throw new TypeError(\"Wrong target\");\r\n\r\n        // 3. If _disposableStack_.[[DisposableState]] is ~disposed~, throw a *ReferenceError* exception.\r\n        if (disposableState === \"disposed\") throw new ReferenceError(\"Object is disposed\");\r\n\r\n        // 4. Let _C_ be ? SpeciesConstructor(_disposableStack_, %DisposableStack%).\r\n        // 5. Assert: IsConstructor(_C_) is *true*.\r\n        const C = SpeciesConstructor(this, DisposableStack);\r\n\r\n        // 6. Let _newDisposableStack_ be ? Construct(_C_, « »).\r\n        const newDisposableStack = new C();\r\n\r\n        // 7. Perform ? RequireInternalSlot(_newDisposableStack_, [[DisposableState]]).\r\n        if (!weakDisposableState.has(newDisposableStack)) throw new TypeError(\"Wrong target\");\r\n\r\n        // 8. If _newDisposableStack_.[[DisposableState]] is not ~pending~, throw a *TypeError* exception.\r\n        if (weakDisposableState.get(newDisposableStack) !== \"pending\") throw new TypeError(\"Expected new DisposableStack to be pending\");\r\n\r\n        // 9. Append each element of _disposableStack_.[[DisposableResourceStack]] to _newDisposableStack_.[[DisposableResourceStack]].\r\n        // 10. Set _disposableStack_.[[DisposableResourceStack]] to a new empty List.\r\n        const disposableResourceStack = weakDisposableResourceStack.get(this)!;\r\n        const newDisposableResourceStack = weakDisposableResourceStack.get(newDisposableStack)!;\r\n        newDisposableResourceStack.push(...disposableResourceStack.splice(0, disposableResourceStack.length));\r\n\r\n        // 11. Return _newDisposableStack_.\r\n        return newDisposableStack;\r\n    }\r\n\r\n    /**\r\n     * Dispose this object's resources.\r\n     */\r\n    [Disposable.dispose]() {\r\n        // 9.3.3.4 DisposableStack.prototype [ @@dispose ] ()\r\n\r\n        // 1. Let _disposableStack_ be the *this* value.\r\n        \r\n        // 2. Perform ? RequireInternalSlot(_disposableStack_, [[DisposableState]]).\r\n        const disposableState = weakDisposableState.get(this);\r\n        if (!disposableState) throw new TypeError(\"Wrong target\");\r\n\r\n        // 3. If _disposableStack_.[[DisposableState]] is ~disposed~, return *undefined*.\r\n        if (disposableState === \"disposed\") return;\r\n\r\n        // 4. Set _disposableStack_.[[DisposableState]] to ~disposed~.\r\n        weakDisposableState.set(this, \"disposed\");\r\n\r\n        // 5. Return DisposeResources(_disposableStack_, NormalCompletion(*undefined*)).\r\n        const disposableResourceStack = weakDisposableResourceStack.get(this)!;\r\n        DisposeResources(\"sync\", disposableResourceStack.splice(0, disposableResourceStack.length), /*completion*/ undefined);\r\n    }\r\n}\r\n","\"use strict\";\n/*\n   Copyright 2019 Ron Buckton\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPrimitive = exports.isPropertyKey = exports.isString = exports.isBoolean = exports.isPositiveInteger = exports.isInteger = exports.isPositiveNonZeroFiniteNumber = exports.isPositiveFiniteNumber = exports.isNumber = exports.isIterator = exports.isAsyncIterableObject = exports.isAsyncIterable = exports.isIterableObject = exports.isIterable = exports.isPresent = exports.isMissing = exports.isDefined = exports.isUndefined = exports.isInstance = exports.isObject = exports.isFunctionOrUndefined = exports.isFunction = void 0;\n/*@internal*/\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\nexports.isFunction = isFunction;\n/*@internal*/\nfunction isFunctionOrUndefined(value) {\n    return typeof value === \"function\" || value === undefined;\n}\nexports.isFunctionOrUndefined = isFunctionOrUndefined;\n/*@internal*/\nfunction isObject(value) {\n    return typeof value === \"object\" && value !== null\n        || typeof value === \"function\";\n}\nexports.isObject = isObject;\n/*@internal*/\nfunction isInstance(value, ctor) {\n    return !isMissing(value) && value instanceof ctor;\n}\nexports.isInstance = isInstance;\n/*@internal*/\nfunction isUndefined(value) {\n    return value === undefined;\n}\nexports.isUndefined = isUndefined;\n/*@internal*/\nfunction isDefined(value) {\n    return value === undefined;\n}\nexports.isDefined = isDefined;\n/*@internal*/\nfunction isMissing(value) {\n    return value === null\n        || value === undefined;\n}\nexports.isMissing = isMissing;\n/*@internal*/\nfunction isPresent(value) {\n    return value !== null\n        && value !== undefined;\n}\nexports.isPresent = isPresent;\n/*@internal*/\nfunction isIterable(value) {\n    return value !== undefined\n        && value !== null\n        && Symbol.iterator in Object(value);\n}\nexports.isIterable = isIterable;\n/*@internal*/\nfunction isIterableObject(value) {\n    return isObject(value) && Symbol.iterator in value;\n}\nexports.isIterableObject = isIterableObject;\n/*@internal*/\nfunction isAsyncIterable(value) {\n    return value !== undefined\n        && value !== null\n        && Symbol.asyncIterator in Object(value);\n}\nexports.isAsyncIterable = isAsyncIterable;\n/*@internal*/\nfunction isAsyncIterableObject(value) {\n    return isObject(value) && Symbol.asyncIterator in value;\n}\nexports.isAsyncIterableObject = isAsyncIterableObject;\n/** @internal */\nfunction isIterator(value) {\n    return isObject(value)\n        && isFunction(value.next)\n        && isFunctionOrUndefined(value.throw)\n        && isFunctionOrUndefined(value.return)\n        && isFunctionOrUndefined(value[Symbol.iterator]);\n}\nexports.isIterator = isIterator;\n;\n;\n;\n;\n/*@internal*/\nfunction isNumber(value) {\n    return typeof value === \"number\";\n}\nexports.isNumber = isNumber;\n/*@internal*/\nfunction isPositiveFiniteNumber(value) {\n    return isFinite(value) && value >= 0;\n}\nexports.isPositiveFiniteNumber = isPositiveFiniteNumber;\n/*@internal*/\nfunction isPositiveNonZeroFiniteNumber(value) {\n    return isFinite(value) && value > 0;\n}\nexports.isPositiveNonZeroFiniteNumber = isPositiveNonZeroFiniteNumber;\n/*@internal*/\nfunction isInteger(value) {\n    return Object.is(value, value | 0);\n}\nexports.isInteger = isInteger;\n/*@internal*/\nfunction isPositiveInteger(value) {\n    return isInteger(value) && value >= 0;\n}\nexports.isPositiveInteger = isPositiveInteger;\n/*@internal*/\nfunction isBoolean(value) {\n    return typeof value === \"boolean\";\n}\nexports.isBoolean = isBoolean;\n/*@internal*/\nfunction isString(value) {\n    return typeof value === \"string\";\n}\nexports.isString = isString;\n/*@internal*/\nfunction isPropertyKey(value) {\n    return typeof value === \"string\"\n        || typeof value === \"symbol\"\n        || typeof value === \"number\";\n}\nexports.isPropertyKey = isPropertyKey;\n/*@internal*/\nfunction isPrimitive(value) {\n    return typeof value !== \"function\"\n        && (typeof value !== \"object\" || value === null);\n}\nexports.isPrimitive = isPrimitive;\n//# sourceMappingURL=index.js.map"]}